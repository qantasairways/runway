// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PopupField renders correctly with defaults 1`] = `
.emotion-3 {
  border: 0;
  width: 100%;
  cursor: pointer;
  background-color: #323232;
  padding: 0 16px;
  position: relative;
  font-family: "Ciutadella",sans-serif;
  font-weight: 300;
}

.emotion-2 {
  height: 6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-width: 100%;
}

.emotion-0 {
  color: white;
  text-transform: uppercase;
  position: absolute;
  top: 5px;
  left: 7px;
  font-size: 1rem;
}

.emotion-1 {
  color: #626262;
  font-size: 2.25rem;
  -webkit-letter-spacing: -0.0625rem;
  -moz-letter-spacing: -0.0625rem;
  -ms-letter-spacing: -0.0625rem;
  letter-spacing: -0.0625rem;
}

<PopupField
  Icon={null}
  className={null}
  closeAriaLabel="Close dialog"
  fieldLabel={null}
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  values={Array []}
>
  <div>
    <button
      aria-expanded={false}
      aria-haspopup="dialog"
      className="emotion-3 null"
      onBlur={[Function]}
      onClick={[Function]}
      type="button"
    >
      <ButtonContent
        Icon={null}
        fieldLabel={null}
        placeHolder=""
        values={Array []}
      >
        <div
          className="emotion-2"
        >
          <span
            className="emotion-0"
          />
          <div
            className="emotion-1"
          />
        </div>
      </ButtonContent>
    </button>
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={false}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={300}
      unmountOnExit={true}
    />
  </div>
</PopupField>
`;

exports[`PopupField renders correctly with one child element 1`] = `
.emotion-3 {
  border: 0;
  width: 100%;
  cursor: pointer;
  background-color: #323232;
  padding: 0 16px;
  position: relative;
  font-family: "Ciutadella",sans-serif;
  font-weight: 300;
}

.emotion-2 {
  height: 6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-width: 100%;
}

.emotion-0 {
  color: white;
  text-transform: uppercase;
  position: absolute;
  top: 5px;
  left: 7px;
  font-size: 1rem;
}

.emotion-1 {
  color: #626262;
  font-size: 2.25rem;
  -webkit-letter-spacing: -0.0625rem;
  -moz-letter-spacing: -0.0625rem;
  -ms-letter-spacing: -0.0625rem;
  letter-spacing: -0.0625rem;
}

<PopupField
  Icon={null}
  className={null}
  closeAriaLabel="Close dialog"
  fieldLabel={null}
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  values={Array []}
>
  <div>
    <button
      aria-expanded={false}
      aria-haspopup="dialog"
      className="emotion-3 null"
      onBlur={[Function]}
      onClick={[Function]}
      type="button"
    >
      <ButtonContent
        Icon={null}
        fieldLabel={null}
        placeHolder=""
        values={Array []}
      >
        <div
          className="emotion-2"
        >
          <span
            className="emotion-0"
          />
          <div
            className="emotion-1"
          />
        </div>
      </ButtonContent>
    </button>
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={false}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={300}
      unmountOnExit={true}
    />
  </div>
</PopupField>
`;

exports[`PopupField renders correctly with one child function 1`] = `
.emotion-3 {
  border: 0;
  width: 100%;
  cursor: pointer;
  background-color: #323232;
  padding: 0 16px;
  position: relative;
  font-family: "Ciutadella",sans-serif;
  font-weight: 300;
}

.emotion-2 {
  height: 6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-width: 100%;
}

.emotion-0 {
  color: white;
  text-transform: uppercase;
  position: absolute;
  top: 5px;
  left: 7px;
  font-size: 1rem;
}

.emotion-1 {
  color: #626262;
  font-size: 2.25rem;
  -webkit-letter-spacing: -0.0625rem;
  -moz-letter-spacing: -0.0625rem;
  -ms-letter-spacing: -0.0625rem;
  letter-spacing: -0.0625rem;
}

<PopupField
  Icon={null}
  className={null}
  closeAriaLabel="Close dialog"
  fieldLabel={null}
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  values={Array []}
>
  <div>
    <button
      aria-expanded={false}
      aria-haspopup="dialog"
      className="emotion-3 null"
      onBlur={[Function]}
      onClick={[Function]}
      type="button"
    >
      <ButtonContent
        Icon={null}
        fieldLabel={null}
        placeHolder=""
        values={Array []}
      >
        <div
          className="emotion-2"
        >
          <span
            className="emotion-0"
          />
          <div
            className="emotion-1"
          />
        </div>
      </ButtonContent>
    </button>
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={false}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={300}
      unmountOnExit={true}
    />
  </div>
</PopupField>
`;

exports[`PopupField renders correctly with props 1`] = `
.emotion-3 {
  border: 0;
  width: 100%;
  cursor: pointer;
  background-color: #323232;
  padding: 0 16px;
  position: relative;
  font-family: "Ciutadella",sans-serif;
  font-weight: 300;
}

.emotion-2 {
  height: 6rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  max-width: 100%;
}

.emotion-0 {
  color: white;
  text-transform: uppercase;
  position: absolute;
  top: 5px;
  left: 7px;
  font-size: 1rem;
}

.emotion-1 {
  color: #626262;
  font-size: 2.25rem;
  -webkit-letter-spacing: -0.0625rem;
  -moz-letter-spacing: -0.0625rem;
  -ms-letter-spacing: -0.0625rem;
  letter-spacing: -0.0625rem;
}

<PopupField
  Icon={null}
  className={null}
  closeAriaLabel="Close dialog"
  fieldLabel={null}
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  values={Array []}
>
  <div>
    <button
      aria-expanded={false}
      aria-haspopup="dialog"
      className="emotion-3 null"
      onBlur={[Function]}
      onClick={[Function]}
      type="button"
    >
      <ButtonContent
        Icon={null}
        fieldLabel={null}
        placeHolder=""
        values={Array []}
      >
        <div
          className="emotion-2"
        >
          <span
            className="emotion-0"
          />
          <div
            className="emotion-1"
          />
        </div>
      </ButtonContent>
    </button>
    <Transition
      appear={false}
      enter={true}
      exit={true}
      in={false}
      mountOnEnter={false}
      onEnter={[Function]}
      onEntered={[Function]}
      onEntering={[Function]}
      onExit={[Function]}
      onExited={[Function]}
      onExiting={[Function]}
      timeout={300}
      unmountOnExit={true}
    />
  </div>
</PopupField>
`;
