// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PopupField renders correctly with defaults 1`] = `
<ButtonWithDialog
  Icon={null}
  buttonLabel={null}
  closeAriaLabel="Close dialog"
  contentPadding="0 16px"
  dialogAriaLabel=""
  dialogStyles={
    Object {
      "background": "white",
      "boxSizing": "border-box",
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "label": "runway__dialog",
      "left": 0,
      "overflow": "auto",
      "position": "fixed",
      "top": 0,
      "transition": "top 300ms ease-in-out",
      "width": "100%",
      "zIndex": 1000,
    }
  }
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  renderButtonValue={[Function]}
  renderHeader={[Function]}
  transitionStyles={
    Object {
      "entered": Object {
        "top": 0,
      },
      "entering": Object {
        "top": "100%",
      },
      "exiting": Object {
        "top": "100%",
      },
    }
  }
/>
`;

exports[`PopupField renders correctly with one child element 1`] = `
<ButtonWithDialog
  Icon={null}
  buttonLabel={null}
  closeAriaLabel="Close dialog"
  contentPadding="0 16px"
  dialogAriaLabel=""
  dialogStyles={
    Object {
      "background": "white",
      "boxSizing": "border-box",
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "label": "runway__dialog",
      "left": 0,
      "overflow": "auto",
      "position": "fixed",
      "top": 0,
      "transition": "top 300ms ease-in-out",
      "width": "100%",
      "zIndex": 1000,
    }
  }
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  renderButtonValue={[Function]}
  renderHeader={[Function]}
  transitionStyles={
    Object {
      "entered": Object {
        "top": 0,
      },
      "entering": Object {
        "top": "100%",
      },
      "exiting": Object {
        "top": "100%",
      },
    }
  }
>
  <span>
    Child Element
  </span>
</ButtonWithDialog>
`;

exports[`PopupField renders correctly with one child function 1`] = `
.emotion-3 {
  position: relative;
  height: 6rem;
  width: 100%;
  max-width: 100%;
  border: 0;
  padding: 0 16px;
  cursor: pointer;
  background-color: #323232;
  color: #fff;
  font-family: "Ciutadella",sans-serif;
  font-size: 1.125rem;
  font-weight: 300;
}

.emotion-2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.emotion-0 {
  position: absolute;
  top: 5px;
  left: 7px;
  color: white;
  text-transform: uppercase;
  font-size: 1rem;
}

.emotion-1 {
  color: #626262;
  font-size: 2.25rem;
  -webkit-letter-spacing: -0.0625rem;
  -moz-letter-spacing: -0.0625rem;
  -ms-letter-spacing: -0.0625rem;
  letter-spacing: -0.0625rem;
}

<PopupField
  HeaderIcon={null}
  Icon={null}
  buttonLabel={null}
  closeAriaLabel="Close dialog"
  dialogAriaLabel=""
  headerLabel=""
  largeButtonValue=""
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  smallButtonValue=""
>
  <ButtonWithDialog
    Icon={null}
    buttonLabel={null}
    closeAriaLabel="Close dialog"
    contentPadding="0 16px"
    dialogAriaLabel=""
    dialogStyles={
      Object {
        "background": "white",
        "boxSizing": "border-box",
        "display": "flex",
        "flexDirection": "column",
        "height": "100%",
        "label": "runway__dialog",
        "left": 0,
        "overflow": "auto",
        "position": "fixed",
        "top": 0,
        "transition": "top 300ms ease-in-out",
        "width": "100%",
        "zIndex": 1000,
      }
    }
    onBlur={[Function]}
    onClose={[Function]}
    placeHolder=""
    renderButtonValue={[Function]}
    renderHeader={[Function]}
    transitionStyles={
      Object {
        "entered": Object {
          "top": 0,
        },
        "entering": Object {
          "top": "100%",
        },
        "exiting": Object {
          "top": "100%",
        },
      }
    }
  >
    <div>
      <Button
        Icon={null}
        buttonLabel={null}
        closeAriaLabel="Close dialog"
        contentPadding="0 16px"
        dialogStyles={
          Object {
            "background": "white",
            "boxSizing": "border-box",
            "display": "flex",
            "flexDirection": "column",
            "height": "100%",
            "label": "runway__dialog",
            "left": 0,
            "overflow": "auto",
            "position": "fixed",
            "top": 0,
            "transition": "top 300ms ease-in-out",
            "width": "100%",
            "zIndex": 1000,
          }
        }
        onBlur={[Function]}
        onClick={[Function]}
        onClose={[Function]}
        open={false}
        placeHolder=""
        renderButtonValue={[Function]}
        setButtonRef={[Function]}
        transitionStyles={
          Object {
            "entered": Object {
              "top": 0,
            },
            "entering": Object {
              "top": "100%",
            },
            "exiting": Object {
              "top": "100%",
            },
          }
        }
      >
        <button
          aria-expanded={false}
          aria-haspopup="dialog"
          className="emotion-3"
          onBlur={[Function]}
          onClick={[Function]}
          type="button"
        >
          <div
            className="emotion-2"
          >
            <span
              className="emotion-0"
            />
            <div
              className="emotion-1"
            />
          </div>
        </button>
      </Button>
      <Transition
        appear={false}
        enter={true}
        exit={true}
        in={false}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={300}
        unmountOnExit={true}
      />
    </div>
  </ButtonWithDialog>
</PopupField>
`;

exports[`PopupField renders correctly with props 1`] = `
<ButtonWithDialog
  Icon={null}
  buttonLabel={null}
  closeAriaLabel="Close dialog"
  contentPadding="0 16px"
  dialogAriaLabel=""
  dialogStyles={
    Object {
      "background": "white",
      "boxSizing": "border-box",
      "display": "flex",
      "flexDirection": "column",
      "height": "100%",
      "label": "runway__dialog",
      "left": 0,
      "overflow": "auto",
      "position": "fixed",
      "top": 0,
      "transition": "top 300ms ease-in-out",
      "width": "100%",
      "zIndex": 1000,
    }
  }
  onBlur={[Function]}
  onClose={[Function]}
  placeHolder=""
  renderButtonValue={[Function]}
  renderHeader={[Function]}
  transitionStyles={
    Object {
      "entered": Object {
        "top": 0,
      },
      "entering": Object {
        "top": "100%",
      },
      "exiting": Object {
        "top": "100%",
      },
    }
  }
/>
`;
