// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Typeahead handleToggle() component is controlled renders correctly 1`] = `
.emotion-2 {
  margin-top: 5px;
  max-width: 62px;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #8de2e0;
  border-radius: 15px;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 30px;
  position: relative;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  width: 100%;
}

.emotion-1:focus {
  box-shadow: 0px 0px 1px 2px #dadada;
  outline: none;
}

.emotion-0 {
  background: white;
  border-radius: 50%;
  height: 24px;
  left: calc(100% - 27px);
  position: absolute;
  top: 3px;
  -webkit-transition: left 150ms ease-out;
  transition: left 150ms ease-out;
  width: 24px;
}

<Toggle
  ariaLabel="Press space to toggle"
  checked={true}
  defaultChecked={true}
  id="toggle1"
  label="Toggle:"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="emotion-2"
  >
    <label
      htmlFor="toggle1"
    >
      Toggle:
    </label>
    <div
      aria-checked={true}
      aria-label="Press space to toggle"
      className="emotion-1"
      id="toggle1"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="switch"
      tabIndex="0"
    >
      <div
        className="emotion-0"
      />
    </div>
  </div>
</Toggle>
`;

exports[`Typeahead handleToggle() component is uncontrolled renders correctly 1`] = `
.emotion-2 {
  margin-top: 5px;
  max-width: 62px;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #dadada;
  border-radius: 15px;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 30px;
  position: relative;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  width: 100%;
}

.emotion-1:focus {
  box-shadow: 0px 0px 1px 2px #dadada;
  outline: none;
}

.emotion-0 {
  background: white;
  border-radius: 50%;
  height: 24px;
  left: 3px;
  position: absolute;
  top: 3px;
  -webkit-transition: left 150ms ease-out;
  transition: left 150ms ease-out;
  width: 24px;
}

<Toggle
  ariaLabel="Press space to toggle"
  defaultChecked={false}
  id="toggle1"
  label="Toggle:"
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className="emotion-2"
  >
    <label
      htmlFor="toggle1"
    >
      Toggle:
    </label>
    <div
      aria-label="Press space to toggle"
      className="emotion-1"
      id="toggle1"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="switch"
      tabIndex="0"
    >
      <div
        className="emotion-0"
      />
    </div>
  </div>
</Toggle>
`;

exports[`Typeahead renders correctly when controlled \`checked\` prop updates 1`] = `
.emotion-2 {
  margin-top: 5px;
  max-width: 62px;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #8de2e0;
  border-radius: 15px;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 30px;
  position: relative;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  width: 100%;
}

.emotion-1:focus {
  box-shadow: 0px 0px 1px 2px #dadada;
  outline: none;
}

.emotion-0 {
  background: white;
  border-radius: 50%;
  height: 24px;
  left: calc(100% - 27px);
  position: absolute;
  top: 3px;
  -webkit-transition: left 150ms ease-out;
  transition: left 150ms ease-out;
  width: 24px;
}

<Toggle
  ariaLabel="Press space to toggle"
  checked={true}
  defaultChecked={true}
  id="toggle1"
  label="Toggle:"
  onChange={[Function]}
>
  <div
    className="emotion-2"
  >
    <label
      htmlFor="toggle1"
    >
      Toggle:
    </label>
    <div
      aria-checked={true}
      aria-label="Press space to toggle"
      className="emotion-1"
      id="toggle1"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="switch"
      tabIndex="0"
    >
      <div
        className="emotion-0"
      />
    </div>
  </div>
</Toggle>
`;

exports[`Typeahead renders correctly with defaultChecked prop 1`] = `
.emotion-2 {
  margin-top: 5px;
  max-width: 62px;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #dadada;
  border-radius: 15px;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 30px;
  position: relative;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  width: 100%;
}

.emotion-1:focus {
  box-shadow: 0px 0px 1px 2px #dadada;
  outline: none;
}

.emotion-0 {
  background: white;
  border-radius: 50%;
  height: 24px;
  left: 3px;
  position: absolute;
  top: 3px;
  -webkit-transition: left 150ms ease-out;
  transition: left 150ms ease-out;
  width: 24px;
}

<Toggle
  ariaLabel="Press space to toggle"
  defaultChecked={true}
  id="toggle1"
  label="Toggle:"
  onChange={[Function]}
>
  <div
    className="emotion-2"
  >
    <label
      htmlFor="toggle1"
    >
      Toggle:
    </label>
    <div
      aria-label="Press space to toggle"
      className="emotion-1"
      id="toggle1"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="switch"
      tabIndex="0"
    >
      <div
        className="emotion-0"
      />
    </div>
  </div>
</Toggle>
`;

exports[`Typeahead renders correctly with defaults 1`] = `
.emotion-2 {
  margin-top: 5px;
  max-width: 62px;
}

.emotion-1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background-color: #dadada;
  border-radius: 15px;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 30px;
  position: relative;
  -webkit-transition: background-color 150ms linear;
  transition: background-color 150ms linear;
  width: 100%;
}

.emotion-1:focus {
  box-shadow: 0px 0px 1px 2px #dadada;
  outline: none;
}

.emotion-0 {
  background: white;
  border-radius: 50%;
  height: 24px;
  left: 3px;
  position: absolute;
  top: 3px;
  -webkit-transition: left 150ms ease-out;
  transition: left 150ms ease-out;
  width: 24px;
}

<Toggle
  ariaLabel="Press space to toggle"
  defaultChecked={false}
  id="toggle1"
  label="Toggle:"
  onChange={[Function]}
>
  <div
    className="emotion-2"
  >
    <label
      htmlFor="toggle1"
    >
      Toggle:
    </label>
    <div
      aria-label="Press space to toggle"
      className="emotion-1"
      id="toggle1"
      onClick={[Function]}
      onKeyDown={[Function]}
      role="switch"
      tabIndex="0"
    >
      <div
        className="emotion-0"
      />
    </div>
  </div>
</Toggle>
`;
